version: "3.8"

services:
  redis:
    image: redis:7.0-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin:
    image: openzipkin/zipkin:2.24
    restart: unless-stopped
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9411/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    volumes:
      - .:/app
      - ./utils_mount:/app/utils_mount
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    env_file:
      - dmarket_parser.dev.env
    command: ["python", "main.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import os; os.kill(1, 0)"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    volumes:
      - .:/app
      - ./utils_mount:/app/utils_mount
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    env_file:
      - worker.dev.env
    command: ["python", "worker.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import os; os.kill(1, 0)"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
  rabbitmq-data:
